/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@swagger.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

#pragma once

#include "CoreMinimal.h"

#include "SWGModels.h"

class IHttpRequest;
class IHttpResponse;

typedef TSharedPtr<IHttpRequest> FHttpRequestPtr;
typedef TSharedPtr<IHttpResponse, ESPMode::ThreadSafe> FHttpResponsePtr;

class FJsonObject;

#include "SWGOrder.h"
#include "TMap.h"

namespace Swagger 
{

    class SWG_API SWGStoreApi
	{
	public:
		SWGStoreApi();
		~SWGStoreApi();

		void SetURL(const FString& Url);
		void SetAuthCredentials(const FString& AuthKey, const FString& AuthValue);

        DECLARE_DELEGATE_OneParam(FdeleteOrderDelegate, const deleteOrderResponse&);
        DECLARE_DELEGATE_OneParam(FgetInventoryDelegate, const getInventoryResponse&);
        DECLARE_DELEGATE_OneParam(FgetOrderByIdDelegate, const getOrderByIdResponse&);
        DECLARE_DELEGATE_OneParam(FplaceOrderDelegate, const placeOrderResponse&);
        

        bool deleteOrder(const deleteOrderRequest& Request, const FdeleteOrderDelegate Delegate = FdeleteOrderDelegate()) const;
        bool getInventory(const getInventoryRequest& Request, const FgetInventoryDelegate Delegate = FgetInventoryDelegate()) const;
        bool getOrderById(const getOrderByIdRequest& Request, const FgetOrderByIdDelegate Delegate = FgetOrderByIdDelegate()) const;
        bool placeOrder(const placeOrderRequest& Request, const FplaceOrderDelegate Delegate = FplaceOrderDelegate()) const;
        

	private:
        void OndeleteOrderResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FdeleteOrderDelegate Delegate) const;
        void OngetInventoryResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FgetInventoryDelegate Delegate) const;
        void OngetOrderByIdResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FgetOrderByIdDelegate Delegate) const;
        void OnplaceOrderResponse(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FplaceOrderDelegate Delegate) const;
        

		bool IsValid() const;
		TSharedRef<IHttpRequest> SendRequest(const TCHAR* Path, const TSharedPtr<FJsonObject>& Body) const;
		void HandleResponse(FHttpResponsePtr HttpResponse, bool bSucceeded, Response& Respose) const;

		FString Url;
		FString AuthKey;
		FString AuthValue;
	};

}
